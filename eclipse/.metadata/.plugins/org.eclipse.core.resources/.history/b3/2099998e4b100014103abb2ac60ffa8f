package com.callumhutchy.runecraft2.blocks.ore;

import java.util.Random;

import reference.Reference;

import com.callumhutchy.runecraft2.Runecraft2;
import com.callumhutchy.runecraft2.blocks.models.OreModel;
import com.callumhutchy.runecraft2.blocks.models.tileentities.TileEntityOre;
import com.callumhutchy.runecraft2.blocks.renderer.ore.OreRenderer;
import com.callumhutchy.runecraft2.items.Items;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.block.BlockContainer;
import net.minecraft.block.ITileEntityProvider;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.item.Item;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.world.IBlockAccess;
import net.minecraft.world.World;
import net.minecraftforge.client.IItemRenderer;

public abstract class OreBlock extends BlockContainer{

	

	private int blockID;
	public Item itemToBeDropped;
	private final OreModel model;

	public OreBlock(Material p_i45394_1_, String resourceLocation, String unlocalisedName, Item item) {
		super(p_i45394_1_);
		this.setCreativeTab(Runecraft2.tabRunecraft2Metal);
        this.setBlockBounds(0.0625F, 0F, 0.0625F, 0.9375F, 0.8125F, 0.9375F);
        this.setHardness(3F);
        this.setHarvestLevel("pickaxe", 1);
        this.setBlockTextureName(resourceLocation);
        this.setBlockName(unlocalisedName);
        itemToBeDropped = item;
        this.model = new OreModel();
	}

	 

	//You don't want the normal render type, or it wont render properly.
	@Override
	public int getRenderType() {
	        return -1;
	}
	
	
	
	public boolean shouldSideBeRendered(IBlockAccess iblockaccess, int i, int j, int k, int l)
	{
	   return false;
	}

	//And this tell it that you can see through this block, and neighbor blocks should be rendered.
	public boolean isOpaqueCube()
	{
	   return false;
	}


	public Item getItemDropped(int p_149650_1_, Random p_149650_2_, int p_149650_3_)
    {
        return itemToBeDropped;
    }
	
	@Override
	public TileEntity createNewTileEntity(World var1, int var2) {
		 return new TileEntityOre();
	}
	
	@SideOnly(Side.CLIENT)
	public void registerBlockIcons(IIconRegister iconRegister) {
		this.blockIcon = iconRegister.registerIcon(Reference.MOD_ID + ":" + this.getUnlocalizedName().substring(5));
	}



}
